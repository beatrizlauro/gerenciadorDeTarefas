package view;

import java.sql.Connection;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import model.Tarefa;
import repository.TarefaRepository;
import javax.swing.JOptionPane;
import repository.ConexaoMySQL;

public class JanelaNovaTarefa extends javax.swing.JInternalFrame {

    private static JanelaNovaTarefa instancia;
    private JanelaPrincipal janelaPrincipal;


    /**
     * Creates new form JanelaNovaTarefa
     */
    public JanelaNovaTarefa(JanelaPrincipal janelaPrincipal) {
        initComponents();
        this.janelaPrincipal = janelaPrincipal;
        //txtId.setVisible(false); //escondendo txtId
        txtId.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        taskName = new javax.swing.JLabel();
        txtNomeDaTarefa = new javax.swing.JTextField();
        btnRetroceder = new javax.swing.JButton();
        taskName1 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        btnAvancar = new javax.swing.JButton();
        taskName3 = new javax.swing.JLabel();
        checkBoxConcluido = new javax.swing.JCheckBox();
        taskName2 = new javax.swing.JLabel();
        dateChooserDataCriacao = new com.toedter.calendar.JDateChooser();
        txtId = new javax.swing.JTextField();
        btnGravar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnIrParaMenu = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setTitle("Nova Tarefa");

        taskName.setText("Nome da Tarefa:");

        btnRetroceder.setText("⬅️");
        btnRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrocederActionPerformed(evt);
            }
        });

        taskName1.setText("Descrição:");

        btnAvancar.setText("➡️");
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });

        taskName3.setText("Concluída:");

        checkBoxConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxConcluidoActionPerformed(evt);
            }
        });

        taskName2.setText("Data de Criação:");

        txtId.setEnabled(false);

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnIrParaMenu.setText("Menu");
        btnIrParaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrParaMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRetroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(taskName3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkBoxConcluido)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(taskName2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(dateChooserDataCriacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(taskName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNomeDaTarefa))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(taskName1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnAvancar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnIrParaMenu)
                        .addGap(38, 38, 38))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskName)
                    .addComponent(txtNomeDaTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskName1)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAvancar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkBoxConcluido)
                    .addComponent(taskName3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(taskName2)
                    .addComponent(dateChooserDataCriacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIrParaMenu)
                    .addComponent(btnExcluir)
                    .addComponent(btnGravar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkBoxConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxConcluidoActionPerformed

    }//GEN-LAST:event_checkBoxConcluidoActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        int id = Integer.parseInt(txtId.getText());

        Tarefa tarefa = new Tarefa();
        tarefa.setNomeTarefa(txtNomeDaTarefa.getText());
        tarefa.setDescricao(txtDescricao.getText());
        tarefa.setConcluida(checkBoxConcluido.isSelected());

        // Converte a data selecionada, se houver; caso contrário, utiliza a data atual
        Date dataSelecionada = dateChooserDataCriacao.getDate();
        if (dataSelecionada != null) {
            LocalDate dataCriacao = dataSelecionada.toInstant()
                                    .atZone(ZoneId.systemDefault())
                                    .toLocalDate();
            tarefa.setDataCriacao(dataCriacao);
            janelaPrincipal.atualizarContadores();
        } else {
            // Opcional: definir uma data padrão ou avisar o usuário
            tarefa.setDataCriacao(LocalDate.now());
        }

        tarefa.setId(id);
        String mensagem;
        TarefaRepository tarefaRepository = new TarefaRepository();
        boolean retornoBanco = false;

        if (id == 0) {
            retornoBanco = tarefaRepository.inserir((Connection) janelaPrincipal.conexaoMySQL.connection, tarefa);
            mensagem = "Tarefa inserida com sucesso!";
            janelaPrincipal.atualizarContadores();
        } else {
            retornoBanco = tarefaRepository.atualizar((Connection) janelaPrincipal.conexaoMySQL.connection, tarefa);
            mensagem = "Tarefa atualizada com sucesso!";
            janelaPrincipal.atualizarContadores();
            
        }

        if(retornoBanco) {
            JOptionPane.showMessageDialog(
                this,
                mensagem,
                "Tela de Cadastro",
                JOptionPane.INFORMATION_MESSAGE
            );
            limparJanela();
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnIrParaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrParaMenuActionPerformed
        fecharJanela();
    }//GEN-LAST:event_btnIrParaMenuActionPerformed

    private void btnRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrocederActionPerformed
        // Limpa os campos da janela
        limparJanela();

        TarefaRepository tarefaRepository = new TarefaRepository();
        int currentId = Integer.parseInt(txtId.getText());
        Tarefa tarefa = tarefaRepository.selecionar(ConexaoMySQL.connection, "<", currentId);

        // Verifica se a tarefa retornada é válida (supondo que um id 0 indica registro não encontrado)
        if (tarefa != null && tarefa.getId() != 0) {
           // Utiliza os getters corretos da classe Tarefa
           txtNomeDaTarefa.setText(tarefa.getNomeTarefa());
           txtDescricao.setText(tarefa.getDescricao());
           checkBoxConcluido.setSelected(tarefa.isConcluida());

           // Converte LocalDate para java.util.Date para o dateChooser
           java.util.Date dataCriacao = java.util.Date.from(
                   tarefa.getDataCriacao().atStartOfDay(java.time.ZoneId.systemDefault()).toInstant());
           dateChooserDataCriacao.setDate(dataCriacao);

           txtId.setText(String.valueOf(tarefa.getId()));
           janelaPrincipal.atualizarContadores();
        } else {
           // Se não houver tarefa anterior, limpa os campos e define o id como 0
           limparJanela();
           txtId.setText("0");
        }
    }//GEN-LAST:event_btnRetrocederActionPerformed

    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        // Limpa os campos da janela
        limparJanela();

        TarefaRepository tarefaRepository = new TarefaRepository();
        int currentId = Integer.parseInt(txtId.getText());

        // Utiliza o operador ">" para buscar a tarefa com id maior que o atual
        Tarefa tarefa = tarefaRepository.selecionar(ConexaoMySQL.connection, ">", currentId);

        // Verifica se a tarefa retornada é válida (supondo que um id 0 indica registro não encontrado)
        if (tarefa != null && tarefa.getId() != 0) {
           // Preenche os campos com os dados da tarefa obtida
           txtNomeDaTarefa.setText(tarefa.getNomeTarefa());
           txtDescricao.setText(tarefa.getDescricao());
           checkBoxConcluido.setSelected(tarefa.isConcluida());

           // Converte o LocalDate (data de criação) para java.util.Date e define no dateChooser
           java.util.Date dataCriacao = java.util.Date.from(
                   tarefa.getDataCriacao().atStartOfDay(java.time.ZoneId.systemDefault()).toInstant());
           dateChooserDataCriacao.setDate(dataCriacao);

           txtId.setText(String.valueOf(tarefa.getId()));
           janelaPrincipal.atualizarContadores();
        } else {
           // Caso não haja tarefa com id maior, limpa os campos e define o id como 0
           limparJanela();
           txtId.setText("0");
        }
    }//GEN-LAST:event_btnAvancarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (Integer.parseInt(txtId.getText()) > 0) {
            int resposta = JOptionPane.showConfirmDialog(
                    this,
                    "Deseja realmente excluir esse registro?",
                    "Excluir",
                    JOptionPane.YES_NO_OPTION
            );

            if (resposta == JOptionPane.YES_OPTION) {
                int id = Integer.parseInt(txtId.getText());
                Tarefa tarefa = new Tarefa();
                tarefa.setId(id);
                TarefaRepository tarefaRepository = new TarefaRepository();
                boolean retornoBanco = tarefaRepository.deletar(
                    ConexaoMySQL.connection,
                    tarefa
                );
                if (retornoBanco) {
                    limparJanela();
                    txtId.setText("0");
                    JOptionPane.showMessageDialog(
                            this,
                            "Registro excluído com sucesso!",
                            "Tela de cadastro",
                            JOptionPane.INFORMATION_MESSAGE
                    );
                    janelaPrincipal.atualizarContadores();
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed
    
    private void limparJanela() {
        txtNomeDaTarefa.setText("");
        txtDescricao.setText("");
        checkBoxConcluido.setSelected(false); // Desmarca a checkbox
        dateChooserDataCriacao.setDate(null);
        txtNomeDaTarefa.requestFocus(); // Move o cursor para o campo de nome da tarefa
    }
    
    private void fecharJanela(){
        instancia = null;
        dispose();
    }
    
    public static JanelaNovaTarefa getInstancia(JanelaPrincipal janelaPrincipal){
        if(instancia == null)
            instancia = new JanelaNovaTarefa(janelaPrincipal);
        return instancia;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvancar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnIrParaMenu;
    private javax.swing.JButton btnRetroceder;
    private javax.swing.JCheckBox checkBoxConcluido;
    private com.toedter.calendar.JDateChooser dateChooserDataCriacao;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel taskName;
    private javax.swing.JLabel taskName1;
    private javax.swing.JLabel taskName2;
    private javax.swing.JLabel taskName3;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeDaTarefa;
    // End of variables declaration//GEN-END:variables

}
